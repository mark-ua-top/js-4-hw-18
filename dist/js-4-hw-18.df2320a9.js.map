{"mappings":"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","sources":["<anon>","src/api/getStudents.js","src/index.js","src/api/postStudent.js","src/api/patchStudent.js","src/api/deleteStudent.js"],"sourcesContent":["\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire8620\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire8620\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"H2f4l\", function(module, exports) {\n\n$parcel$export(module.exports, \"getStudents\", () => $0815c17dcd40cdad$export$7bb0e950345d2b50);\nasync function $0815c17dcd40cdad$export$7bb0e950345d2b50() {\n    const response = await fetch(\"http://localhost:3000/students\");\n    const data = await response.json();\n    $0815c17dcd40cdad$var$renderStudents(data);\n}\nfunction $0815c17dcd40cdad$var$renderStudents(students) {\n    const studentsTableBody = document.querySelector(\"#students-table tbody\");\n    studentsTableBody.innerHTML = \"\";\n    students.forEach((student)=>{\n        const row = document.createElement(\"tr\");\n        row.innerHTML = `\n      <td>${student.id}</td>\n      <td>${student.name}</td>\n      <td>${student.age}</td>\n      <td>${student.course}</td>\n      <td>${student.skills.join(\", \")}</td>\n      <td>${student.email}</td>\n      <td>${student.isEnrolled ? \"\\u0422\\u0430\\u043A\" : \"\\u041D\\u0456\"}</td>\n      <td>\n        <button class=\"update-btn\" data-id=\"${student.id}\">\\u{41E}\\u{43D}\\u{43E}\\u{432}\\u{438}\\u{442}\\u{438}</button>\n        <button class=\"delete-btn\" data-id=\"${student.id}\">\\u{412}\\u{438}\\u{434}\\u{430}\\u{43B}\\u{438}\\u{442}\\u{438}</button>\n      </td>\n    `;\n        studentsTableBody.appendChild(row);\n    });\n}\n\n});\n\n\nvar $H2f4l = parcelRequire(\"H2f4l\");\n\nfunction $483041df2155c656$export$43c0ded1cf9d0940(e) {\n    e.preventDefault();\n    const nameInput = document.getElementById(\"name\");\n    const ageInput = document.getElementById(\"age\");\n    const courseInput = document.getElementById(\"course\");\n    const skillsInput = document.getElementById(\"skills\");\n    const emailInput = document.getElementById(\"email\");\n    const isEnrolledInput = document.getElementById(\"isEnrolled\");\n    const student = {\n        name: nameInput.value.trim(),\n        age: parseInt(ageInput.value, 10),\n        course: courseInput.value.trim(),\n        skills: skillsInput.value.split(\",\").map((s)=>s.trim()),\n        email: emailInput.value.trim(),\n        isEnrolled: isEnrolledInput.checked\n    };\n    if (!student.name) {\n        showMessage(\"\\u0406\\u043C'\\u044F \\u043D\\u0435 \\u043C\\u043E\\u0436\\u0435 \\u0431\\u0443\\u0442\\u0438 \\u043F\\u043E\\u0440\\u043E\\u0436\\u043D\\u0456\\u043C\", true);\n        return;\n    }\n    fetch(\"http://localhost:3000/students\", {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(student)\n    }).then((response)=>{\n        if (!response.ok) throw new Error(`\\u{41F}\\u{43E}\\u{43C}\\u{438}\\u{43B}\\u{43A}\\u{430}: ${response.statusText}`);\n        return response.json();\n    }).then(()=>{\n        document.getElementById(\"add-student-form\").reset();\n        showMessage(\"\\u0421\\u0442\\u0443\\u0434\\u0435\\u043D\\u0442\\u0430 \\u0434\\u043E\\u0434\\u0430\\u043D\\u043E \\u0443\\u0441\\u043F\\u0456\\u0448\\u043D\\u043E!\");\n        Promise.resolve((parcelRequire(\"H2f4l\"))).then((module)=>module.getStudents());\n    });\n}\n\n\n\nfunction $53759b0104ce1627$export$bb44b68707822cc6(id) {\n    const newName = prompt(\"\\u0412\\u0432\\u0435\\u0434\\u0456\\u0442\\u044C \\u043D\\u043E\\u0432\\u0435 \\u0456\\u043C'\\u044F \\u0441\\u0442\\u0443\\u0434\\u0435\\u043D\\u0442\\u0430:\");\n    if (!newName) return;\n    fetch(`http://localhost:3000/students/${id}`, {\n        method: \"PATCH\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n            name: newName\n        })\n    }).then((res)=>res.json()).then(()=>{\n        Promise.resolve((parcelRequire(\"H2f4l\"))).then((module)=>module.getStudents());\n    });\n}\n\n\n\nasync function $7076b6a65d539608$export$3a8629131ae87772(id) {\n    if (!confirm(\"\\u0412\\u0438 \\u0432\\u043F\\u0435\\u0432\\u043D\\u0435\\u043D\\u0456, \\u0449\\u043E \\u0445\\u043E\\u0447\\u0435\\u0442\\u0435 \\u0432\\u0438\\u0434\\u0430\\u043B\\u0438\\u0442\\u0438 \\u0446\\u044C\\u043E\\u0433\\u043E \\u0441\\u0442\\u0443\\u0434\\u0435\\u043D\\u0442\\u0430?\")) return;\n    await fetch(`http://localhost:3000/students/${id}`, {\n        method: \"DELETE\"\n    });\n    const module = await Promise.resolve((parcelRequire(\"H2f4l\")));\n    module.getStudents();\n}\n\n\ndocument.getElementById(\"get-students-btn\").addEventListener(\"click\", (0, $H2f4l.getStudents));\ndocument.getElementById(\"add-student-form\").addEventListener(\"submit\", (0, $483041df2155c656$export$43c0ded1cf9d0940));\ndocument.getElementById(\"students-table\").addEventListener(\"click\", (e)=>{\n    if (e.target.tagName === \"BUTTON\") {\n        const id = e.target.dataset.id;\n        if (e.target.classList.contains(\"update-btn\")) (0, $53759b0104ce1627$export$bb44b68707822cc6)(id);\n        if (e.target.classList.contains(\"delete-btn\")) (0, $7076b6a65d539608$export$3a8629131ae87772)(id);\n    }\n});\n\n\n//# sourceMappingURL=js-4-hw-18.df2320a9.js.map\n","export async function getStudents() {\n  const response = await fetch(\"http://localhost:3000/students\");\n  const data = await response.json();\n  renderStudents(data);\n}\n\nfunction renderStudents(students) {\n  const studentsTableBody = document.querySelector(\"#students-table tbody\");\n  studentsTableBody.innerHTML = \"\";\n  students.forEach((student) => {\n    const row = document.createElement(\"tr\");\n    row.innerHTML = `\n      <td>${student.id}</td>\n      <td>${student.name}</td>\n      <td>${student.age}</td>\n      <td>${student.course}</td>\n      <td>${student.skills.join(\", \")}</td>\n      <td>${student.email}</td>\n      <td>${student.isEnrolled ? \"Так\" : \"Ні\"}</td>\n      <td>\n        <button class=\"update-btn\" data-id=\"${student.id}\">Оновити</button>\n        <button class=\"delete-btn\" data-id=\"${student.id}\">Видалити</button>\n      </td>\n    `;\n    studentsTableBody.appendChild(row);\n  });\n}\n","import { getStudents } from \"./api/getStudents.js\";\nimport { addStudent } from \"./api/postStudent.js\";\nimport { updateStudent } from \"./api/patchStudent.js\";\nimport { deleteStudent } from \"./api/deleteStudent.js\";\n\ndocument\n  .getElementById(\"get-students-btn\")\n  .addEventListener(\"click\", getStudents);\n\ndocument\n  .getElementById(\"add-student-form\")\n  .addEventListener(\"submit\", addStudent);\n\ndocument\n  .getElementById(\"students-table\")\n  .addEventListener(\"click\", (e) => {\n    if (e.target.tagName === \"BUTTON\") {\n      const id = e.target.dataset.id;\n      if (e.target.classList.contains(\"update-btn\")) {\n        updateStudent(id);\n      }\n      if (e.target.classList.contains(\"delete-btn\")) {\n        deleteStudent(id);\n      }\n    }\n  });\n","export function addStudent(e) {\n  e.preventDefault();\n\n  const nameInput = document.getElementById(\"name\");\n  const ageInput = document.getElementById(\"age\");\n  const courseInput = document.getElementById(\"course\");\n  const skillsInput = document.getElementById(\"skills\");\n  const emailInput = document.getElementById(\"email\");\n  const isEnrolledInput = document.getElementById(\"isEnrolled\");\n\n  const student = {\n    name: nameInput.value.trim(),\n    age: parseInt(ageInput.value, 10),\n    course: courseInput.value.trim(),\n    skills: skillsInput.value.split(\",\").map((s) => s.trim()),\n    email: emailInput.value.trim(),\n    isEnrolled: isEnrolledInput.checked,\n  };\n\n  if (!student.name) {\n    showMessage(\"Ім'я не може бути порожнім\", true);\n    return;\n  }\n\n  fetch(\"http://localhost:3000/students\", {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(student),\n  })\n    .then((response) => {\n      if (!response.ok) throw new Error(`Помилка: ${response.statusText}`);\n      return response.json();\n    })\n    .then(() => {\n      document.getElementById(\"add-student-form\").reset();\n      showMessage(\"Студента додано успішно!\");\n      import(\"./getStudents.js\").then((module) => module.getStudents());\n    });\n}\n","export function updateStudent(id) {\n  const newName = prompt(\"Введіть нове ім'я студента:\");\n  if (!newName) return;\n\n  fetch(`http://localhost:3000/students/${id}`, {\n    method: \"PATCH\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({ name: newName }),\n  })\n    .then((res) => res.json())\n    .then(() => {\n      import(\"./getStudents.js\").then((module) => module.getStudents());\n    });\n}\n","export async function deleteStudent(id) {\n  if (!confirm(\"Ви впевнені, що хочете видалити цього студента?\")) return;\n\n  await fetch(`http://localhost:3000/students/${id}`, {\n    method: \"DELETE\",\n  });\n\n  const module = await import(\"./getStudents.js\");\n  module.getStudents();\n}\n"],"names":["$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","parcelRegister","$0815c17dcd40cdad$export$7bb0e950345d2b50","response","fetch","students","json","studentsTableBody","document","querySelector","innerHTML","forEach","student","row","createElement","name","age","course","skills","join","email","isEnrolled","appendChild","Object","defineProperty","get","set","s","enumerable","configurable","$H2f4l","$7076b6a65d539608$export$3a8629131ae87772","confirm","method","Promise","resolve","getStudents","getElementById","addEventListener","e","preventDefault","nameInput","ageInput","courseInput","skillsInput","emailInput","isEnrolledInput","value","trim","parseInt","split","map","checked","showMessage","headers","body","JSON","stringify","then","ok","statusText","reset","target","tagName","dataset","classList","contains","newName","prompt","res"],"version":3,"file":"js-4-hw-18.df2320a9.js.map"}